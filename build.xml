
<project name="obd" basedir="." default="jar">

	<property name="runtimedir_name" value="runtime" />
	<property name="runtimedir" location="${runtimedir_name}" />
	<property name="librarydir" location="lib" />
	<property name="dest.dir" value="build" />
	<property name="dest.dir.classes" value="${dest.dir}/classes" />
	<property name="dest.dir.lib" value="${dest.dir}/lib" />
	<property name="projectname" value="obdapi" />
	<property name="jarfile" location="${librarydir}/runlibs/${projectname}.jar" />
	<property name="main_jar_manifest" location="jar_manifest" />
	<property name="outputdir" value="classes" />
	<property name="sourcedir" value="src" />
	<property name="apidoc_dest" location="docs" />
	<property name="librarydir" location="lib" />
	<property name="relaxdir" location="${sourcedir}/org/obd/model/doc-files" />
	<property name="releasenotes" location="CHANGES" />
	<property name="tagprefix" value="${projectname}-" />
 
        <property name="build.dir" value="build"/>

	<!-- dependency information -->
	<property name="bbop_dest" location="../BBOP" />
	<property name="obo_dest" location="../OBO" />
        <property name="obovocab_dest" location="../obo-vocab-java" />

	<fileset dir="${sourcedir}" id="resource_files">
		<include name="**/resources/**" />
		<!-- make sure templates, css, images etc included in jar -->
		<include name="**/pages/**" />
	</fileset>
	
	<!-- make sure templates, css, images etc included in jar -->
	<fileset id="main_jar_contents" dir="${outputdir}" includes="**/*.class,**/resources/**,**/pages/**" excludes="**/CVS/*" />

	<path id="classpath">
		<fileset refid="library_jars" />
		<fileset dir="${librarydir}/runlibs">
        		<include name="*.jar" />
		</fileset>
		<fileset dir="${librarydir}/buildlibs">
			<include name="*.jar" />
		</fileset>
	</path>



	<fileset dir="${librarydir}/runlibs" id="library_jars">
		<include name="*.jar" />
	</fileset>
	<target name="buildbbop" if="bbop_dest">
		<ant dir="${bbop_dest}" target="jar" inheritAll="false" />
		<copy file="${bbop_dest}/bbop.jar" todir="${librarydir}/runlibs" />
	</target>
	<target name="buildobo" if="obo_dest">
		<ant dir="${obo_dest}" target="jar" inheritAll="false" />
		<copy file="${obo_dest}/obo.jar" todir="${librarydir}/runlibs" />
	</target>
        <target name="buildobovocab" if="obovocab_dest">
                <ant dir="${obovocab_dest}" target="jar" inheritAll="false" />
                <copy file="${obovocab_dest}/obo-vocab.jar" todir="${librarydir}/runlibs" />
        </target>

	<target name="library_jars" depends="buildbbop, buildobo, buildobovocab">
		<mkdir dir="${runtimedir}" />
		<sync todir="${runtimedir}">
			<fileset refid="library_jars" />
		</sync>
	</target>

	
	<target name="resources">
		<copy todir="${outputdir}">
			<fileset refid="resource_files" />
		</copy>
	</target>

	<target name="apidocs" description="Build API documentation">
		<javadoc 
			sourcepath="${sourcedir}" 
			classpathref="classpath" 
			defaultexcludes="yes" 
			destdir="${apidoc_dest}" 
			packagenames="org.obd.*"
			author="true" 
			version="true" 
			use="true" >
		       <doctitle><![CDATA[<h1>${ant.project.name}</h1>]]></doctitle>
		        <bottom>
		            <![CDATA[<i>Copyright &#169; 2008 All Rights Reserved.</i>]]>
		        </bottom>
		        <tag name="todo" scope="all" description="To do:"/>
			</javadoc>
	</target>

	<target name="classes" depends="buildbbop, resources">
		<mkdir dir="${outputdir}" />
		<javac srcdir="${sourcedir}" destdir="${outputdir}" debug="true">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>

	</target>

	<target name="checkjar">
		<condition property="main_jar_current">
			<and>
				<available file="${jarfile}" />
				<available file="${main_jar_manifest}" />
				<uptodate targetfile="${jarfile}">
					<srcfiles refid="main_jar_contents" />
				</uptodate>
				<uptodate targetfile="${jarfile}" srcfile="${main_jar_manifest}" />
			</and>
		</condition>
	</target>

	<target name="jar" depends="classes, checkjar" unless="main_jar_current" description="Generate jar file">
		<jar destfile="${jarfile}" manifest="${main_jar_manifest}">
			<fileset refid="main_jar_contents" />
		</jar>
	</target>

   <target name="lib/buildlib/obd-rest-xmlbeans.jar">
   	<exec executable="scomp xml/obd-rest.xsd">
   	</exec>
   </target>


    <property name="conf" value="conf"/>
    <target name="xml-beans">
        <xmlbean schema="${conf}" destfile="${lib}/buildlib/obd-rest-xmlbeans.jar" classpath="${project.classpath3}"
                 failonerror="true" javasource="1.5">
        </xmlbean>
    </target>

	<target name="ensure-test-name" unless="test">
	    <fail message="You must run this target with -Dtest=TestName"/>
	</target>

	<target name="runtest" description="Runs the test you specify on the command line with -Dtest=" depends="ensure-test-name">
	    <junit printsummary="withOutAndErr" fork="yes"> 
	        <classpath refid="classpath" />
	        <formatter type="plain" usefile="false"/>
	        <batchtest>
	            <fileset dir="${sourcedir}">
	                <include name="**/${test}.java"/>
	            </fileset>
	        </batchtest>
	    </junit>
	</target>

</project>
