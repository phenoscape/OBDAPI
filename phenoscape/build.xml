<?xml version="1.0"?>
<!-- ====================================================================== 
     ant build file
     ====================================================================== -->
<project name="Phenoscape OBD" default="build-all" basedir=".">
	<description>Phenoscape OBD database creation and data loading script</description>
	<tstamp>
		<format property="NOW" pattern="yyyy-MM-dd_HH:mm:ss"/>
	</tstamp>
	<property name="build_date" value="${NOW}"/>
	<property name="staging" value="staging"/>
	<property name="nexml" value="${staging}/nexml"/>
	<property name="ontologies" value="${staging}/ontologies"/>
	<property name="ontology-sources" value="../conf/obd-phenoscape.conf"/>
	<property name="nexml-repo" value="https://phenoscape.svn.sourceforge.net/svnroot/phenoscape/trunk/data/phenex-files"/>
	<property name="file-loc" value="${staging}"/>
	
	<property environment="environment"/>
<!-- Environment variables to set for database connections:
PGDATABASE sets the name of the database
PGUSER sets the user name used to connect to the database.
PGPASSWORD sets the password used if the server demands password authentication. Use of this environment variable is not recommended for security reasons (some operating systems allow non-root users to see process environment variables via ps); instead consider using the ~/.pgpass file.
PGHOST sets the database server name.
-->
	<property name="db-name" value="${environment.PGDATABASE}"/>
	<property name="db-user" value="${environment.PGUSER}"/>
	<property name="db-password" value="${environment.PGPASSWORD}"/>
	<property name="db-host" value="${environment.PGHOST}"/>
	
	<path id="jarsclasspath">
		<fileset dir="../lib/buildlibs">
			<include name="*"/>
		</fileset>
		<fileset dir="../lib/runlibs">
			<include name="*"/>
		</fileset>
	</path>
	
<!-- The init target makes sure that the prerequisite directories exist. -->
	<target name="init">
		<mkdir dir="${staging}"/>
		<mkdir dir="${staging}/ontologies"/>
	</target>
	
	<target name="create-db" depends="init" description="instantiates the OBD database">
		<exec executable="perl" dir="../scripts">
			<env key="USER" value="${db-user}"/>
			<arg value="obd-create-db.pl"/>
			<arg value="-d"/>
			<arg value="${db-name}"/>
		</exec>
	</target>
	
	<target name="create-db-phenoscape" description="adds additional Phenoscape ddl to the database">
		<exec executable="psql" input="../sql/phenoscape/obdws-procedures.plpgsql">
			<env key="PGDATABASE" value="${db-name}"/>
	    </exec>
		<exec executable="psql" input="../sql/phenoscape/obd-phenoscape-schema.sql">
			<env key="PGDATABASE" value="${db-name}"/>
		</exec>
	</target>
	
	<target name="load-obo" description="loads OBO ontologies into the database">
		<property name="existing-path" value="${environment.PATH}"/>
		<echo message="${existing-path}"/>
		<exec executable="perl" dir="${ontologies}">
			<env key="PATH" value="../../../launch_scripts:${existing-path}"/>
			<arg value="../../../scripts/obd-load-db-from-obo.pl"/>
			<arg value="--database"/>
			<arg value="${db-name}"/>
			<arg value="--host"/>
			<arg value="${db-host}"/>
			<arg value="--noreasoner"/>
			<arg value="--conf"/>
			<arg value="../../${ontology-sources}"/>
			<arg value="--keepdownloads"/>
		</exec>
	</target>
	
	<target name="load-homology" description="loads the homology file into the database">
		<java classname="org.phenoscape.bridge.HomologyObdBridge" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="ontology-dir" value="${ontologies}"/>
			<sysproperty key="homology-url" value="http://phenoscape.svn.sourceforge.net/svnroot/phenoscape/trunk/data/homology-tables/Weberian-app-homology"/>
		</java>
	</target>
	
	<target name="load-nexml" description="loads NeXML data files into the database">
		<java classname="org.phenoscape.bridge.PhenoscapeDataLoader" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<arg value="${nexml}"/>
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="ontology-dir" value="${ontologies}"/>
			<sysproperty key="file-loc" value="${file-loc}"/>
		</java>
	</target>
	
	<target name="load-zfin" description="loads ZFIN data sources into the database">
		<java classname="org.phenoscape.bridge.ZfinObdBridge" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="ontology-dir" value="${ontologies}"/>
			<sysproperty key="phenotype-url" value="http://zfin.org/data_transfer/Downloads/pheno_obo.txt"/>
			<sysproperty key="missing-markers-url" value="http://zfin.org/data_transfer/Downloads/genotype_features_missing_markers.txt"/>
		    <sysproperty key="genotype-url" value="http://zfin.org/data_transfer/Downloads/genotype_features.txt"/>
			<sysproperty key="gene-name-url" value="http://zfin.org/data_transfer/Downloads/genetic_markers.txt"/>
		</java>
	</target>
	
	<target name="run-obd-reasoner" description="runs the OBD reasoner on the database contents">
		<exec executable="perl">
			<arg value="../scripts/obd-reasoner.pl"/>
			<arg value="--database"/>
			<arg value="${db-name}"/>
		</exec>
	</target>
	
	<target name="run-phenoscape-reasoner" description="runs the Phenoscape-specific reasoner on the database contents">
		<exec executable="perl">
			<arg value="../scripts/phenoscape-obd-reasoner.pl"/>
		    <arg value="--database"/>
		    <arg value="${db-name}"/>
			<arg value="-h"/>
			<arg value="${db-host}"/>
			<arg value="-U"/>
			<arg value="${db-user}"/>
			<arg value="--pwd"/>
			<arg value="${db-password}"/>
		</exec>
	</target>
	
	<target name="clear-db" depends="init" description="removes all data from the OBD database">
		<sql driver="org.postgresql.Driver" url="jdbc:postgresql://${db-host}/${db-name}" 
		            userid="${db-user}" password="${db-password}" 
		            classpath="../lib/runlibs/postgresql-8.2-504.jdbc3.jar"> 
			TRUNCATE node CASCADE;
			TRUNCATE obd_schema_metadata;
			TRUNCATE phenotype_by_entity_character; 
			TRUNCATE taxon_phenotype_metadata;
			TRUNCATE phenotype_inheres_in_part_of_entity; 
			ALTER SEQUENCE node_node_id_seq RESTART WITH 1; 
			ALTER SEQUENCE alias_alias_id_seq RESTART WITH 1;	
			ALTER SEQUENCE description_description_id_seq RESTART WITH 1;	
			ALTER SEQUENCE inference_evidence_inference_evidence_id_seq RESTART WITH 1;					
			ALTER SEQUENCE inference_evidence_support_inference_evidence_support_id_seq RESTART WITH 1;
			ALTER SEQUENCE link_argument_link_argument_id_seq RESTART WITH 1;								
			ALTER SEQUENCE node_node_uid_seq RESTART WITH 1;
			ALTER SEQUENCE tagval_tagval_id_seq RESTART WITH 1;												
			ALTER SEQUENCE sameas_sameas_id_seq RESTART WITH 1;												
			ALTER SEQUENCE link_link_id_seq RESTART WITH 1;
		</sql>
	</target>
	
	<target name="populate-phenotype-table" depends="init" description="puts all the phenotype info into one table">
		<sql driver="org.postgresql.Driver" url="jdbc:postgresql://${db-host}/${db-name}" 
	            userid="${db-user}" password="${db-password}" 
	            classpath="../lib/runlibs/postgresql-8.2-504.jdbc3.jar"> 
			SELECT populate_phenotype_table();
			SELECT populate_metadata_table();
			SELECT populate_phenotype_inheres_in_part_of_entity();
		</sql>
	</target>
				
	<target name="select-db" depends="init" description="retrieves the refresh date from both databases">
			<sql driver="org.postgresql.Driver" url="jdbc:postgresql://${db-host}/obdphenoscape" 
			            userid="${db-user}" password="${db-password}" 
			            classpath="../lib/runlibs/postgresql-8.2-504.jdbc3.jar" print="true"> 
				SELECT 'obdphenoscape last refreshed on ' || notes AS refresh_date FROM obd_schema_metadata;
			</sql>
			<sql driver="org.postgresql.Driver" url="jdbc:postgresql://${db-host}/obdphenoscape_test" 
					            userid="${db-user}" password="${db-password}" 
					            classpath="../lib/runlibs/postgresql-8.2-504.jdbc3.jar" print="true"> 
				SELECT 'obdphenoscape_test last refreshed on ' || notes AS refresh_date FROM obd_schema_metadata;
			</sql>
	</target>
	
	<target name="load-metadata" depends="init" description="Loads metadata into the database">
		<sql driver="org.postgresql.Driver" url="jdbc:postgresql://${db-host}/${db-name}" 
		            userid="${db-user}" password="${db-password}" 
		            classpath="../lib/runlibs/postgresql-8.2-504.jdbc3.jar"> 
			INSERT INTO obd_schema_metadata (schema_release,schema_revision,schema_version_date, notes) 
			VALUES('1.1', 'Revision: 153', 'Date: 2008-06-04 13:00:34 -0700 (Wed, 04 Jun 2008)', '${build_date}');			
		</sql>
	</target>
	
	<target name="clean" description="removes cached files">
	      <delete dir="${staging}"/>
	</target>
	
	<target name="build-all" depends="clean,init,create-db,create-db-phenoscape,load-obo,checkout-nexml,load-nexml,load-zfin,run-obd-reasoner,run-phenoscape-reasoner"/>
	
	<target name="refresh-all" depends="clear-db,load-obo,load-zfin,checkout-nexml,load-nexml,run-obd-reasoner,run-phenoscape-reasoner,populate-phenotype-table,make-labels,load-homology,load-metadata,load-annotation-counts"/>
	
	<target name="download-ontologies" depends="init" description="download ontologies to staging folder">
<!-- TODO this should be implemented to separate the ontology retrieval
         from the obd-load-db-from-obo.pl script -->
	</target>
	
	<target name="checkout-nexml" depends="init" description="">
		<exec executable="svn" dir="${staging}">
			<arg value="checkout"/>
			<arg value="${nexml-repo}"/>
			<arg value="nexml"/>
		</exec>
	</target>
	
	<target name="load-annotation-counts" depends="load-anatomy-annotation-counts,load-gene-annotation-counts,load-taxon-annotation-counts"/>
	
	<target name="load-anatomy-annotation-counts" description="extracts annotation counts for each entity">
		<java classname="org.phenoscape.bridge.AnatomicalEntityAnnotationCounter" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="file-loc" value="${file-loc}"/>
		</java>
	</target>
	
	<target name="load-gene-annotation-counts" description="extracts annotation counts for each gene">
		<java classname="org.phenoscape.bridge.GeneAnnotationCounter" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="file-loc" value="${file-loc}"/>
		</java>
	</target>
	
	<target name="load-taxon-annotation-counts" description="extracts annotation counts for each taxon">
		<java classname="org.phenoscape.bridge.TaxonAnnotationCounter" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
			<sysproperty key="db-user" value="${db-user}"/>
			<sysproperty key="db-password" value="${db-password}"/>
			<sysproperty key="db-host" value="${db-host}"/>
			<sysproperty key="db-name" value="${db-name}"/>
			<sysproperty key="file-loc" value="${file-loc}"/>
		</java>
	</target>
	<target name="update-nexml" description="">
		<exec executable="svn" dir="${nexml}">
			<arg value="update"/>
		</exec>      
	</target>
	
	<target name="make-labels" description="creates labels for compositional descriptions and updates the corresponding rows">
			<java classname="org.phenoscape.bridge.Labelmaker" classpathref="jarsclasspath" fork="true" maxmemory="1024m">
				<sysproperty key="db-user" value="${db-user}"/>
				<sysproperty key="db-password" value="${db-password}"/>
				<sysproperty key="db-host" value="${db-host}"/>
				<sysproperty key="db-name" value="${db-name}"/>
			</java>
		</target>
</project>
